#!/Library/Frameworks/Python.framework/Versions/3.4/bin/python3

##########################################################################
# Used for quickly creating .cpp/.hpp files for classes via the terminal #
##########################################################################

import sys

def create_cpp_file(class_name):
	template_file = open("CodeTemplates/CppFile.tem", "r")
	new_file_contents = template_file.read()
	new_file_contents = new_file_contents.replace("${FILENAME}", class_name)

	file_name = class_name + ".cpp"
	new_file = open(file_name, "w")
	new_file.write(new_file_contents)
	new_file.close()

	print(file_name + " created!")

def create_header_file(class_name):
	template_file = open("CodeTemplates/HeaderFile.tem", "r")
	new_file_contents = template_file.read()
	new_file_contents = new_file_contents.replace("${FILENAME}", class_name)
	new_file_contents = new_file_contents.replace("${FILENAMECAPS}", class_name.upper())

	file_name = class_name + ".hpp"
	new_file = open(file_name, "w")
	new_file.write(new_file_contents)
	new_file.close()

	print(file_name + " created!")

def create_class_files(class_name):
	create_cpp_file(class_name)
	create_header_file(class_name)

def create_xml_file(file_name):
	template_file = open("CodeTemplates/XMLFile.tem", "r")
	new_file_contents = template_file.read()
	new_file_contents = new_file_contents.replace("${FILENAME}", file_name.title())

	file_name = file_name + ".xml"
	new_file = open(file_name, "w")
	new_file.write(new_file_contents)
	new_file.close()

	print(file_name + " created!")

def main():
	if len(sys.argv) == 3:
		if sys.argv[1][0:5] == "make:":
			arg = sys.argv[1][5:]
			if arg.lower() == "class":
				create_class_files(sys.argv[2])
			elif arg.lower() == "xml":
				create_xml_file(sys.argv[2])
			else:
				print("Command not found.")
		else:
			print("Command not found.")

if __name__ == "__main__":
	main()